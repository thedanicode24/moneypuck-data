---
title: "Exploring data"
format: html
editor: visual
---

## Loading packages

```{r}
library(tidyverse)
library(reshape2)
library(sqldf)
library(patchwork)
```

## Importing data

```{r}
url = "https://moneypuck.com/moneypuck/playerData/careers/gameByGame/regular/skaters/8479318.csv"
df <- read.csv(url)
```

## Wrangling data

### 1. Removing variables

```{r}

```

### 2. Removing observations

```{r}
any(is.na(df))
```

### 3. Viewing data

```{r}
# head(df)
```

### 4. Converting variables types

```{r}
df$season <- as.factor(df$season)
df$opposingTeam <- as.factor(df$opposingTeam)
```

### 5. Creating derived variables

```{r}
```

## Variable breakdown

```{r}
```

## Exploratory data analysis

### 1. Basic statistics

```{r}
summary(df_selected)
sd(df_selected$I_F_goals)
sd(df_selected$I_F_points)
sd(df_selected$icetime)
sd(df_selected$gameScore)
```

### 2. Returning data

```{r}
sqldf("SELECT min(gameScore), gameDate, opposingTeam FROM df_selected")
sqldf("SELECT max(gameScore), gameDate, opposingTeam FROM df_selected")
sqldf("SELECT max(I_F_goals), gameDate, opposingTeam FROM df_selected")
sqldf("SELECT max(I_F_points), gameDate, opposingTeam FROM df_selected")
```

### 3. Computing and visualizing frequency distributions

```{r}
situations <- unique(df$situation)

for (s in situations) {
  subset_df = subset(df, situation==s)
  p_score <- ggplot(subset_df, aes(x=gameScore)) +
    geom_histogram(fill="royalblue3", color="black", bins=20) +
    labs(title = "Game Score - Distribution by Situation",
         subtitle=paste("Situation:", s),
         x = "Game Score",
         y="Number of games") +
    theme(plot.title = element_text(face="bold"))
  print(p_score)
}
```

```{r}
bp_score <- ggplot(df, aes(x = situation, y = gameScore)) +
  geom_boxplot(fill="red3", color="red1") +
  labs(title = "Game Score Distribution by Situation",
       subtitle=paste("Situation:", s),
       x = "Situation",
       y = "Game Score") +
  theme(plot.title = element_text(face="bold")) + 
  stat_summary(fun=mean, geom="point", shape=20, 
               size=5, color="white", fill="white")
print(bp_score)
```

```{r}
situations <- unique(df$situation)

for (s in situations) {
  subset_df = subset(df, situation==s)
  bp_score <- ggplot(subset_df, aes(x=season, y=gameScore)) +
    geom_boxplot(fill="dodgerblue4", color="dodgerblue") +
    labs(title = "Game Score - Distribution by Situation",
       subtitle=paste("Situation:", s),
       x = "Situation",
       y = "Game Score") +
    theme(plot.title = element_text(face="bold")) + 
    stat_summary(fun=mean, geom="point", shape=20, 
                 size=5, color="white", fill="white")
  print(bp_score)
}
```

```{r}
situations <- unique(df$situation)

for (s in situations) {
  subset_df = subset(df, situation==s)
  subset_df %>%
  summarize(Situation = s,
    MIN = min(gameScore),
    LQ = quantile(gameScore, .25),
    UQ = quantile(gameScore, .75),
    AVG = mean(gameScore),
    M = median(gameScore),
    MAX = max(gameScore)) -> tibble
  print(tibble)
}
```

```{r}
situations <- unique(df$situation)

for (s in situations) {
  subset_df = subset(df, situation==s)
  bp_score <- ggplot(subset_df, aes(x=opposingTeam, y=gameScore)) +
    geom_boxplot(fill="blue4", color="dodgerblue") +
    labs(title = "Game Score - Distribution by Opposing Team in each Situation",
       subtitle=paste("Situation:", s),
       x = "Situation",
       y = "Game Score") +
    theme(plot.title = element_text(face="bold")) + 
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    stat_summary(fun=mean, geom="point", shape=10, 
                 size=5, color="white", fill="white")
  print(bp_score)
}
```

### 4. Computing and visualizing correlations

```{r}

```

### 5. Computing and visualizing means and medians

```{r}

```

## 
